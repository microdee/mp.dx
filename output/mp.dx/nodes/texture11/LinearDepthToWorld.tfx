//@author: 
//@help: 
//@tags: filter
//@credits:

#if !defined(PASSFORMAT0) /// -type string
#define PASSFORMAT0 "R16G16B16A16_Float"
#endif

#define IS_ORTHO(P) (round(P._34)==0&&round(P._44)==1)

Texture2D tex0: PREVIOUS;
float4x4 tPI;
float2 FOV = 1;
// magic numbers because couldn't figure shit out
float4 MagicCorr = float4(0.4868, 0.3261, -0.0532, -0.0625);

float4 UVtoSCREEN(float2 UV){
	return float4((UV.xy*2-1)*float2(1,-1),0,1);
}
float3 UVtoEYE(float2 UV){
	return float3(mul(float4((UV.xy*2-1)*float2(1,-1),0,1),tPI).xy,1);
}
float2 R:TARGETSIZE;

SamplerState s0 <bool visible=true;string uiname="Sampler";> {Filter=MIN_MAG_MIP_LINEAR;AddressU=CLAMP;AddressV=CLAMP;};

float4 pBLUR(float4 PosWVP:SV_POSITION,float2 x:TEXCOORD0):SV_Target{
	float d=tex0.SampleLevel(s0,x,0).r;
	float3 p = UVtoEYE(x)*d;
	p.xy *= MagicCorr.xy;
	p.xy += MagicCorr.zw;
	return float4(p,1);
}
technique10 FastBlur{
	pass P0 <string format=PASSFORMAT0;>
	{SetPixelShader(CompileShader(ps_4_0,pBLUR()));}
}